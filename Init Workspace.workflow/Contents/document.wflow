<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>346</string>
	<key>AMApplicationVersion</key>
	<string>2.3</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string># osascript -e 'tell application "Google Chrome" to get the bounds of the window 1'on goToSpace(num)	tell application "System Events" to key code (num + 17) using control down # press ctrl-1end goToSpaceon run {input, parameters}		set intelliJPath to "/Applications/IntelliJ IDEA 12.app"		# Get the current network SSID	set SSID to do shell script "/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | awk -F':' '/ SSID/ {print $2}'"		if SSID is " series of tubes" then		set leftScreenBounds to {0, 22, 1680, 1046}		set rightScreenBounds to {1680, -616, 3600, 464}				# SPACE 1		goToSpace(1)		delay 1		tell application "Google Chrome"			activate			if (count of windows) is greater than 0 then				close every window			end if			make new window with properties {bounds:rightScreenBounds, zoomed:true}			repeat until window 1 is visible			end repeat			tell window 1 to set the URL of tab 1 to "https://www.google.com/calendar/render"			tell window 1 to make new tab with properties {URL:"https://mail.google.com/mail/u/0/#inbox"}			tell window 1 to make new tab with properties {URL:"http://hub.attask.com"}			set active tab index of window 1 to 1		end tell				# SPACE 2		goToSpace(2)		delay 1		tell application "Google Chrome"			make new window with properties {bounds:leftScreenBounds, zoomed:true}			activate			tell window 1 to set the URL of tab 1 to "http://hub.attask.com"		end tell				delay 1		tell application "IntelliJ IDEA 12"			set wasNotUp to it is not running			if wasNotUp then				do shell script "open \"" &amp; intelliJPath &amp; "\""			end if		end tell		tell application "System Events"			tell application process "IntelliJ IDEA"				if wasNotUp then					set loaded to false					with timeout of 20 seconds						repeat until loaded							try								get position of window 2 # wait until the second window (first is splash screen) is visible								set loaded to true							end try						end repeat					end timeout				end if								set position of window 1 to items 1 thru 2 of rightScreenBounds				set width to (item 3 of rightScreenBounds) - (item 1 of rightScreenBounds)				set height to (item 4 of rightScreenBounds) - (item 2 of rightScreenBounds)				set size of window 1 to {width, height}			end tell		end tell				goToSpace(1)	else if SSID is "AtTask" then		set leftScreenBounds to {0, 22, 1680, 1046}		set rightScreenBounds to {1680, -616, 3600, 464}							else		display alert "No configuration set for when connected to network '" &amp; SSID &amp; "'"	end if		return inputend run</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>40B4307F-D37E-4A09-9978-6B9A62AF0A12</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>690B38B2-0568-476E-AE3E-6D6627C41C80</string>
				<key>UUID</key>
				<string>B06A7B1D-3362-4468-8568-9D372F492233</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>557.500000:726.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/English.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
